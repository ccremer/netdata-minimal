# netdata configuration for aggregating data from remote hosts
#
# API keys authorize a pair of sending-receiving netdata servers.
# Once their communication is authorized, they can exchange metrics for any
# number of hosts.
#
# You can generate API keys, with the linux command: uuidgen


# -----------------------------------------------------------------------------
# 1. ON SLAVE NETDATA - THE ONE THAT WILL BE SENDING METRICS

[stream]
# Enable this on slaves, to have them send metrics.
enabled = no

# Where is the receiving netdata?
# A space separated list of:
#
#      [PROTOCOL:]HOST[%INTERFACE][:PORT]
#
# If many are given, the first available will get the metrics.
#
# PROTOCOL  = tcp, udp, or unix (only tcp and unix are supported by masters)
# HOST      = an IPv4, IPv6 IP, or a hostname, or a unix domain socket path.
#             IPv6 IPs should be given with brackets [ip:address]
# INTERFACE = the network interface to use (only for IPv6)
# PORT      = the port number or service name (/etc/services)
#
# This communication is not HTTP (it cannot be proxied by web proxies).
destination =

# The API_KEY to use (as the sender)
api key =

# The timeout to connect and send metrics
timeout seconds = 60

# If the destination line above does not specify a port, use this
default port = 19999

# The buffer to use for sending metrics.
# 1MB is good for 10-20 seconds of data, so increase this
# if you expect latencies.
buffer size bytes = 1048576

# If the connection fails, or it disconnects,
# retry after that many seconds.
reconnect delay seconds = 5

# Attempt to sync the clock the of the master with the clock of the
# slave for that many iterations, when starting.
initial clock resync iterations = 60
